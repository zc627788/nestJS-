version: '3.9'
services:
  service1:
    container_name: server-kafka-producer
    image: server-kafka:1.0.0
    build: 
      context: .
      dockerfile: ./CQRS-Mongose-producer/Dockerfile
    command: npm run start
    ports:
      - 3000:3000
    networks:
      - server-network
    volumes:
      - .:/usr/src/app3
      - /usr/src/app3/node_modules
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb
  service2:
    container_name: server-kafka-comsumer
    image: server-kafka1:1.0.0
    build: 
     context: .
     dockerfile: ./CQRS-Mongose-consumer/Dockerfile
    command: npm run start
    ports:
      - 3001:3001
    networks:
      - server-network
    volumes:
      - .:/usr/src/app2
      - /usr/src/app2/node_modules
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      # 匿名登录--必须开启
      - ALLOW_ANONYMOUS_LOGIN=yes
    #volumes:
    #- ./zookeeper:/bitnami/zookeeper
  # 该镜像具体配置参考 https://github.com/bitnami/bitnami-docker-kafka/blob/master/README.md
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9999:9999'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.240.131.10:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # 允许使用PLAINTEXT协议(镜像中默认为关闭,需要手动开启)
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 全局消息过期时间 6 小时(测试时可以设置短一点)
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
      # 开启JMX监控
      - JMX_PORT=9999
    #volumes:
    #- ./kafka:/bitnami/kafka
    depends_on:
      - zookeeper
  mongodb:
    image: mongo:5.0.0
    container_name: server-mongose-producer2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass12345
    volumes:
      - mongodb-data:/data/db
    networks:
      - server-network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
volumes:
  mongodb-data:
    name: mongodb-data
networks:
  server-network:
